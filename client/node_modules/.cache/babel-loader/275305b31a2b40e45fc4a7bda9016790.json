{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nexport default {\n  name: 'modifyField',\n\n  data() {\n    //校验邮箱的规则\n    const checkScore = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('输入不可以为空'));\n      }\n\n      setTimeout(() => {\n        if (!Number(value)) {\n          callback(new Error('请输入整数，值为[0,150]'));\n        } else {\n          if (value < 0 || value > 150) {\n            callback(new Error('请输入整数，值为[0,150]'));\n          } else {\n            callback();\n          }\n        }\n      }, 100);\n    };\n\n    const checkName = (rule, value, callback) => {\n      const reg = /^[\\u4E00-\\u9FFF\\u3400-\\u4DBF\\uF900-\\uFAFF·]{2,20}$/;\n\n      if (!reg.test(value)) {\n        callback(new Error('请输入有效的名字'));\n      }\n\n      callback();\n    };\n\n    return {\n      imgStr: require('C:/Users/LX\\Pictures\\Saved Pictures'),\n      dialogVisible: false,\n      form: {},\n      // 修改用户表单的验证规则对象\n      rules: {\n        sName: [{\n          required: true,\n          message: '请输入姓名',\n          trigger: 'blur'\n        }, {\n          // eslint-disable-next-line no-undef\n          validator: checkName,\n          trigger: 'blur'\n        }],\n        Acj: [{\n          required: true,\n          message: '请输入JAVA成绩',\n          trigger: 'blur'\n        }, {\n          // eslint-disable-next-line no-undef\n          validator: checkScore,\n          trigger: 'blur'\n        }],\n        Bcj: [{\n          required: true,\n          message: '请输入Android成绩',\n          trigger: 'blur'\n        }, {\n          // eslint-disable-next-line no-undef\n          validator: checkScore,\n          trigger: 'blur'\n        }],\n        Ccj: [{\n          required: true,\n          message: '请输入javaEE成绩',\n          trigger: 'blur'\n        }, {\n          // eslint-disable-next-line no-undef\n          validator: checkScore,\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n\n  methods: {\n    handleClose(done) {\n      this.$confirm('确认关闭？') // eslint-disable-next-line no-unused-vars\n      .then(_ => {\n        done();\n      }) // eslint-disable-next-line no-unused-vars\n      .catch(_ => {});\n    },\n\n    onchangeImgFun() {\n      alert(\"1\"); // var file = e.target.files[0]\n      // console.log(file)\n      // // 获取图片的大小，做大小限制有用\n      // let imgSize = file.size\n      // console.log(imgSize)\n      // var _this = this // this指向问题，所以在外面先定义\n      // // 比如上传头像限制5M大小，这里获取的大小单位是b\n      // if (imgSize <= 50 * 1024) {\n      //   // 合格\n      //   _this.errorStr = ''\n      //   console.log('大小合适')\n      //   // 开始渲染选择的图片\n      //   // 本地路径方法 1\n      //   // this.imgStr = window.URL.createObjectURL(e.target.files[0])\n      //   // console.log(window.URL.createObjectURL(e.target.files[0])) // 获取当前文件的信息\n      //   // base64方法 2\n      //   var reader = new FileReader()\n      //   reader.readAsDataURL(file) // 读出 base64\n      //   reader.onloadend = function () {\n      //     // 图片的 base64 格式, 可以直接当成 img 的 src 属性值\n      //     var dataURL = reader.result\n      //     console.log(dataURL)\n      //     _this.imgStr = dataURL\n      //     // 下面逻辑处理\n      //   }\n      // } else {\n      //   console.log('大小不合适')\n      //   _this.errorStr = '图片大小超出范围'\n      // }\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAqCA;EACAA,mBADA;;EAEAC;IACA;IACA;MACA;QACA;MACA;;MACAC;QACA;UACAC;QACA,CAFA,MAEA;UACA;YACAA;UACA,CAFA,MAEA;YACAA;UACA;QACA;MACA,CAVA,EAUA,GAVA;IAWA,CAfA;;IAgBA;MACA;;MACA;QACAA;MACA;;MACAA;IACA,CANA;;IAOA;MACAC,sDADA;MAEAC,oBAFA;MAGAC,QAHA;MAIA;MACAC;QACAC,QACA;UACAC,cADA;UAEAC,gBAFA;UAGAC;QAHA,CADA,EAMA;UACA;UACAC,oBAFA;UAGAD;QAHA,CANA,CADA;QAaAE,MACA;UACAJ,cADA;UAEAC,oBAFA;UAGAC;QAHA,CADA,EAMA;UACA;UACAC,qBAFA;UAGAD;QAHA,CANA,CAbA;QAyBAG,MACA;UACAL,cADA;UAEAC,uBAFA;UAGAC;QAHA,CADA,EAMA;UACA;UACAC,qBAFA;UAGAD;QAHA,CANA,CAzBA;QAqCAI,MACA;UACAN,cADA;UAEAC,sBAFA;UAGAC;QAHA,CADA,EAMA;UACA;UACAC,qBAFA;UAGAD;QAHA,CANA;MArCA;IALA;EAyDA,CApFA;;EAqFAK;IAEAC;MACA,uBACA;MADA,CAEAC,IAFA,CAEAC;QACAC;MACA,CAJA,EAKA;MALA,CAMAC,KANA,CAMAF,OANA;IAOA,CAVA;;IAYAG;MACAC,WADA,CAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAGA;;EA9CA;AArFA","names":["name","data","setTimeout","callback","imgStr","dialogVisible","form","rules","sName","required","message","trigger","validator","Acj","Bcj","Ccj","methods","handleClose","then","_","done","catch","onchangeImgFun","alert"],"sourceRoot":"src/components","sources":["modifyField.vue"],"sourcesContent":["<template>\n  <div>\n\n    <el-button type=\"text\" @click=\"dialogVisible = true\">点击打开 Dialog</el-button>\n\n    <el-dialog title=\"修改学生信息\" :visible.sync=\"dialogVisible\" width=\"30%\" :before-close=\"handleClose\">\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\">\n        <el-form-item label=\"姓名\" prop=\"sName\">\n          <el-input v-model=\"form.sName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"JAVA成绩\" prop=\"Acj\">\n          <el-input v-model=\"form.Acj\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Android成绩\" prop=\"Bcj\">\n          <el-input v-model=\"form.Bcj\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"JavaEE成绩\" prop=\"Ccj\">\n          <el-input v-model=\"form.Ccj\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"更新头像\">\n          \n          <el-upload class=\"upload-demo\" action=\"onchangeImgFun\"\n              list-type=\"picture\" :auto-upload=\"false\">\n            <el-button size=\"small\" type=\"primary\" >点击上传</el-button>\n          </el-upload>\n          <img alt=\"\" :src=\"imgStr\"/>\n        </el-form-item>\n\n\n        <el-button @click=\"dialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"dialogVisible = false\">确 定</el-button>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'modifyField',\n  data() {\n    //校验邮箱的规则\n    const checkScore = (rule, value, callback) => {\n      if (!value) {\n        return callback(new Error('输入不可以为空'));\n      }\n      setTimeout(() => {\n        if (!Number(value)) {\n          callback(new Error('请输入整数，值为[0,150]'));\n        } else {\n          if (value < 0 || value > 150) {\n            callback(new Error('请输入整数，值为[0,150]'));\n          } else {\n            callback();\n          }\n        }\n      }, 100);\n    }\n    const checkName = (rule, value, callback) => {\n      const reg = /^[\\u4E00-\\u9FFF\\u3400-\\u4DBF\\uF900-\\uFAFF·]{2,20}$/;\n      if (!reg.test(value)) {\n        callback(new Error('请输入有效的名字'));\n      }\n      callback();\n    }\n    return {\n      imgStr:require('C:/Users/LX\\Pictures\\Saved Pictures'),\n      dialogVisible: false,\n      form: {},\n      // 修改用户表单的验证规则对象\n      rules: {\n        sName: [\n          {\n            required: true,\n            message: '请输入姓名',\n            trigger: 'blur'\n          },\n          {\n            // eslint-disable-next-line no-undef\n            validator: checkName,\n            trigger: 'blur'\n          }\n        ],\n        Acj: [\n          {\n            required: true,\n            message: '请输入JAVA成绩',\n            trigger: 'blur'\n          },\n          {\n            // eslint-disable-next-line no-undef\n            validator: checkScore,\n            trigger: 'blur'\n          }\n        ],\n        Bcj: [\n          {\n            required: true,\n            message: '请输入Android成绩',\n            trigger: 'blur'\n          },\n          {\n            // eslint-disable-next-line no-undef\n            validator: checkScore,\n            trigger: 'blur'\n          }\n        ],\n        Ccj: [\n          {\n            required: true,\n            message: '请输入javaEE成绩',\n            trigger: 'blur'\n          },\n          {\n            // eslint-disable-next-line no-undef\n            validator: checkScore,\n            trigger: 'blur'\n          }\n        ]\n\n      }\n    };\n  },\n  methods: {\n\n    handleClose(done) {\n      this.$confirm('确认关闭？')\n        // eslint-disable-next-line no-unused-vars\n        .then(_ => {\n          done();\n        })\n        // eslint-disable-next-line no-unused-vars\n        .catch(_ => { });\n    },\n  \n    onchangeImgFun(){\n      alert(\"1\");\n      // var file = e.target.files[0]\n      // console.log(file)\n      // // 获取图片的大小，做大小限制有用\n      // let imgSize = file.size\n      // console.log(imgSize)\n      // var _this = this // this指向问题，所以在外面先定义\n      // // 比如上传头像限制5M大小，这里获取的大小单位是b\n      // if (imgSize <= 50 * 1024) {\n      //   // 合格\n      //   _this.errorStr = ''\n      //   console.log('大小合适')\n      //   // 开始渲染选择的图片\n      //   // 本地路径方法 1\n      //   // this.imgStr = window.URL.createObjectURL(e.target.files[0])\n      //   // console.log(window.URL.createObjectURL(e.target.files[0])) // 获取当前文件的信息\n\n      //   // base64方法 2\n      //   var reader = new FileReader()\n      //   reader.readAsDataURL(file) // 读出 base64\n      //   reader.onloadend = function () {\n      //     // 图片的 base64 格式, 可以直接当成 img 的 src 属性值\n      //     var dataURL = reader.result\n      //     console.log(dataURL)\n      //     _this.imgStr = dataURL\n      //     // 下面逻辑处理\n      //   }\n      // } else {\n      //   console.log('大小不合适')\n      //   _this.errorStr = '图片大小超出范围'\n      // }\n\n\n    }\n  }\n\n\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}