{"ast":null,"code":"import { searchAllStudent } from \"../api\";\nexport default {\n  name: \"tableDisplay\",\n\n  data() {\n    return {\n      tableData: [],\n      page: {\n        currentPage: 1,\n        pageSize: 10,\n        total: \"\"\n      }\n    };\n  },\n\n  methods: {\n    // 初始页currentPage、初始每页数据数pagesize和数据data\n    handleSizeChange(size) {\n      this.pageSize = size;\n      console.log(this.current);\n      console.log(this.pageSize); // this.display();\n    },\n\n    handleCurrentChange() {\n      console.log(this); // this.display();     \n    },\n\n    async display() {\n      //当前页\n      var current = this.currentPage; //请求所需的参数 根据后端接口要求来\n      //每页显示条数\n\n      var pageSize = this.pageSize; //请求所需的参数 根据后端接口要求来\n\n      console.log(current);\n      console.log(pageSize); // 接口\n\n      try {\n        // 调用接口\n        let msg = await searchAllStudent(current, pageSize);\n        let pageInfo = msg.data.dataMap.pageInfo; // 输出请求后的返回值\n\n        this.tableData = pageInfo.list;\n      } catch (error) {\n        // 请求失败的回调\n        console.log(error);\n      }\n    }\n\n  },\n  mounted: function () {\n    this.$nextTick(async function () {\n      try {\n        // 调用接口\n        let msg = await searchAllStudent(1, 10);\n        let pageInfo = msg.data.dataMap.pageInfo; // 输出请求后的返回值\n\n        this.tableData = pageInfo.list;\n        this.page = pageInfo;\n      } catch (error) {\n        // 请求失败的回调\n        console.log(error);\n      }\n    });\n  }\n};","map":{"version":3,"mappings":"AAsCA;AACA;EACAA,oBADA;;EAEAC;IACA;MACAC,aADA;MAEAC;QACAC,cADA;QAEAC,YAFA;QAGAC;MAHA;IAFA;EASA,CAZA;;EAaAC;IACA;IACAC;MACA;MACAC;MACAA,2BAHA,CAKA;IACA,CARA;;IASAC;MAEAD,kBAFA,CAIA;IACA,CAdA;;IAeA;MACA;MACA,+BAFA,CAEA;MACA;;MACA,6BAJA,CAIA;;MACAA;MACAA,sBANA,CAOA;;MACA;QAEA;QACA;QACA,yCAJA,CAKA;;QACA;MACA,CAPA,CAOA;QACA;QACAA;MACA;IACA;;EAlCA,CAbA;EAkDAE;IACA;MACA;QACA;QACA;QACA,yCAHA,CAIA;;QACA;QACA;MAEA,CARA,CAQA;QACA;QACAF;MACA;IAEA,CAdA;EAeA;AAlEA","names":["name","data","tableData","page","currentPage","pageSize","total","methods","handleSizeChange","console","handleCurrentChange","mounted"],"sourceRoot":"src/components","sources":["tableDisplay.vue"],"sourcesContent":["<template>\r\n    <div class=\"center-container\">\r\n        <el-table :data=\"tableData\" border cell-style=\"text-align:center\">\r\n\r\n            <el-table-column label=\"Image\" min-width=\"100\" prop=\"logo\" header-align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <img :src=\"scope.row.logo\" alt=\"\" style=\"width: 36px;height: 36px\" />\r\n                </template>\r\n\r\n            </el-table-column>\r\n            <el-table-column label=\"学生ID\" min-width=\"50\" prop=\"sId\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"学生姓名\" min-width=\"100\" prop=\"sName\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"Java成绩\" min-width=\"50\" prop=\"Acj\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"Android成绩\" min-width=\"50\" prop=\"Bcj\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"JavaEE成绩\" min-width=\"50\" prop=\"Ccj\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"总成绩\" min-width=\"50\" prop=\"Zcj\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"操作\" header-align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" plain @click=\"handleEdit(scope.$index, scope.row)\">编辑\r\n                    </el-button>\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" plain @click=\"handleDelete(scope.$index, scope.row)\">\r\n                        删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <div class=\"block\">\r\n            <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                :current-page=\"currentPage\" :page-sizes=\"[5, 10, 15, 20]\" :page-size=\"pageSize\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\" :total=\"page.total\">\r\n            </el-pagination>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\nimport { searchAllStudent } from \"../api\"\r\nexport default {\r\n    name: \"tableDisplay\",\r\n    data() {\r\n        return {\r\n            tableData: [],\r\n            page: {\r\n                currentPage: 1,\r\n                pageSize: 10,\r\n                total:\"\"\r\n\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        // 初始页currentPage、初始每页数据数pagesize和数据data\r\n        handleSizeChange(size) {    \r\n            this.pageSize = size;\r\n            console.log(this.current);\r\n            console.log(this.pageSize);\r\n            \r\n            // this.display();\r\n        },\r\n        handleCurrentChange() { \r\n            \r\n            console.log(this);\r\n           \r\n            // this.display();     \r\n        },\r\n        async display(){\r\n            //当前页\r\n            var current = this.currentPage//请求所需的参数 根据后端接口要求来\r\n            //每页显示条数\r\n            var pageSize = this.pageSize//请求所需的参数 根据后端接口要求来\r\n            console.log(current);\r\n            console.log(pageSize);\r\n            // 接口\r\n            try {\r\n\r\n                // 调用接口\r\n                let msg = await searchAllStudent(current,pageSize)\r\n                let pageInfo = msg.data.dataMap.pageInfo\r\n                // 输出请求后的返回值\r\n                this.tableData = pageInfo.list;\r\n            } catch (error) {\r\n                // 请求失败的回调\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n    },\r\n    mounted: function () {\r\n        this.$nextTick(async function () {\r\n            try {\r\n                // 调用接口\r\n                let msg = await searchAllStudent(1,10)\r\n                let pageInfo = msg.data.dataMap.pageInfo\r\n                // 输出请求后的返回值\r\n                this.tableData = pageInfo.list;\r\n                this.page = pageInfo\r\n\r\n            } catch (error) {\r\n                // 请求失败的回调\r\n                console.log(error)\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style  scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}