{"ast":null,"code":"import { bar } from \"../api\";\nexport default {\n  name: \"tableDisplay\",\n  methods: {\n    async request() {\n      try {\n        // 调用接口\n        let a = await bar(); // 输出请求后的返回值\n\n        console.log(a.data.dataMap);\n      } catch (error) {\n        // 请求失败的回调\n        console.log(error);\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA4CA;AACA;EACAA,oBADA;EAEAC;IAEA;MACA;QACA;QACA,oBAFA,CAGA;;QACAC;MACA,CALA,CAKA;QACA;QACAA;MACA;IACA;;EAZA;AAFA","names":["name","methods","console"],"sourceRoot":"src/components","sources":["tableDisplay.vue"],"sourcesContent":["<template>\r\n    <div class=\"center-container\">\r\n      <el-table >\r\n        <template slot=\"empty\">\r\n          <el-empty description=\"暂无数据\"></el-empty>\r\n        </template>\r\n        <el-table-column prop=\"\" label=\"操作账号\" min-width=\"100\"></el-table-column>\r\n        <el-table-column label=\"状态\" min-width=\"120\">\r\n        <!--根据状态值显示内容（两种写法，这里是第一种）-->\r\n          <template slot-scope=\"scope\">\r\n            <p>{{scope.row.status | Status}}</p>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"onlineStatus\" label=\"操作\" min-width=\"140\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button @click=\"handleClick(scope.row)\" type=\"info\" :size=\"$formSize\" icon=\"el-icon-document\">详情</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <el-dialog title=\"系统日志详情\" :visible.sync=\"show\" width=\"40%\">\r\n        <el-descriptions :column=\"1\">\r\n          <el-descriptions-item label=\"操作模块\">{{systemLogform.businessTypeStr}}</el-descriptions-item>\r\n          <el-descriptions-item label=\"登录信息\">{{systemLogform.operName}} / {{systemLogform.operIp}}</el-descriptions-item>\r\n          <el-descriptions-item label=\"请求地址\">{{systemLogform.operUrl}}</el-descriptions-item>\r\n          <el-descriptions-item label=\"请求方式\">{{systemLogform.requestMethod}}</el-descriptions-item>\r\n          <el-descriptions-item label=\"操作方法\">{{systemLogform.method}}</el-descriptions-item>\r\n          <el-descriptions-item label=\"请求参数\">\r\n            <json-viewer :value=\"systemLogform.operParam\" :expand-depth=100 copyable boxed sort></json-viewer>\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"返回参数\">\r\n            <json-viewer :value=\"systemLogform.jsonResult\" :expand-depth=100 copyable boxed sort></json-viewer>\r\n          </el-descriptions-item>\r\n          <el-descriptions-item label=\"状态\">\r\n          <!--根据状态值显示内容（两种写法，这里是第二种）-->\r\n            <el-tag type=\"success\" v-if=\"systemLogform.status === '1'\">正常</el-tag>\r\n            <el-tag type=\"warning\" v-else>不正常</el-tag>\r\n          </el-descriptions-item>\r\n        </el-descriptions>\r\n      </el-dialog>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport {bar} from \"../api\"\r\nexport default {\r\n    name: \"tableDisplay\",\r\n    methods: {\r\n\r\n        async request() {\r\n            try {\r\n                // 调用接口\r\n                let a = await bar()\r\n                // 输出请求后的返回值\r\n                console.log(a.data.dataMap)\r\n            } catch (error) {\r\n                // 请求失败的回调\r\n                console.log(error)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n}\r\n</script>\r\n\r\n<style  scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}