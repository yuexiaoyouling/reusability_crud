{"ast":null,"code":"import { searchAllClass } from \"../api\";\nimport { searchStudentByAny } from \"../api\";\nimport { searchAllStudent } from \"../api\";\nimport { removeStudent } from \"../api\";\nexport default {\n  name: \"tableDisplay\",\n\n  data() {\n    return {\n      tableData: [],\n      page: {\n        currentPage: 1,\n        pageSize: 10,\n        total: \"\"\n      },\n      grades: [],\n      msg: {\n        sId: \"\",\n        sName: \"\",\n        Acj: \"\",\n        Bcj: \"\",\n        Ccj: \"\",\n        grade: {\n          cId: \"\",\n          cName: \"\"\n        }\n      },\n      status: false,\n      dialogVisible: false\n    };\n  },\n\n  methods: {\n    // 初始页currentPage、初始每页数据数pagesize和数据data\n    handleSizeChange(size) {\n      this.page.pageSize = size;\n      this.display();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.page.currentPage = currentPage;\n      this.display();\n    },\n\n    async handleDelete(index, row) {\n      const confirmR = await this.$confirm(\"此操作将删除该数据, 是否继续?\", \"提示\", {\n        confirmButtonText: \"确定\",\n        cancelButtonText: \"取消\",\n        type: \"warning\",\n        center: true\n      }).catch(err => err);\n\n      if (confirmR == \"confirm\") {\n        try {\n          removeStudent(row.sId);\n          this.tableData.splice(index, 1);\n        } catch (error) {\n          // 请求失败的回调\n          console.log(index + 1 + \"is error\");\n        }\n      }\n    },\n\n    handleEdit(index, row) {\n      console.log();\n      this.dialogVisible = false;\n    },\n\n    async display() {\n      //当前页\n      var current = this.page.currentPage; //请求所需的参数 根据后端接口要求来\n      //每页显示条数\n\n      var pageSize = this.page.pageSize; //请求所需的参数 根据后端接口要求来\n      // 接口\n\n      try {\n        // 调用接口\n        let result = await searchAllStudent(current, pageSize);\n        let pageInfo = result.data.dataMap.pageInfo; // 输出请求后的返回值\n\n        this.tableData = pageInfo.list;\n      } catch (error) {\n        // 请求失败的回调\n        console.log(error);\n      }\n    },\n\n    async onSubmit() {\n      //当前页\n      var current = this.page.currentPage; //请求所需的参数 根据后端接口要求来\n      //每页显示条数\n\n      if (current == undefined) {\n        current = 1;\n      }\n\n      var pageSize = this.page.pageSize; //请求所需的参数 根据后端接口要求来\n\n      var sId = this.msg.sId;\n      var sName = this.msg.sName;\n      var grade = this.msg.grade;\n\n      try {\n        // 调用接口\n        let result = await searchStudentByAny(current, pageSize, sId, sName, grade.cName);\n        let pageInfo = result.data.dataMap.pageInfo;\n        this.tableData = pageInfo.list;\n        this.page = pageInfo;\n\n        if (pageInfo.list.length == 1) {\n          let st = pageInfo.list[0];\n          this.msg.Acj = st.Acj;\n          this.msg.Bcj = st.Bcj;\n          this.msg.Ccj = st.Ccj;\n          this.status = true;\n        } else if (pageInfo.list.length == 0 || pageInfo.list.length > 1) {\n          this.status = false;\n        }\n      } catch (error) {\n        // 请求失败的回调\n        console.log(error);\n      }\n\n      if (this.msg.sId == \"\" || this.msg.sName == \"\" || this.msg.grade.cName == \"\") {\n        let msg = await searchAllStudent(current, pageSize);\n        let pageInfo = msg.data.dataMap.pageInfo; // 输出请求后的返回值\n\n        this.tableData = pageInfo.list;\n        this.page = pageInfo;\n        this.status = false;\n      }\n    }\n\n  },\n  mounted: function () {\n    this.$nextTick(async function () {\n      try {\n        // 调用接口\n        let msg = await searchAllStudent(1, 10);\n        let pageInfo = msg.data.dataMap.pageInfo; // 输出请求后的返回值\n\n        this.tableData = pageInfo.list;\n        this.page = pageInfo; // 调用接口\n\n        let result = await searchAllClass();\n        let data = result.data.dataMap.grades; // 输出请求后的返回值\n\n        this.grades = data;\n      } catch (error) {\n        // 请求失败的回调\n        console.log(error);\n      }\n    });\n  }\n};","map":{"version":3,"mappings":"AA6DA;AACA;AACA;AACA;AACA;EACAA,oBADA;;EAEAC;IACA;MACAC,aADA;MAEAC;QACAC,cADA;QAEAC,YAFA;QAGAC;MAHA,CAFA;MAOAC,UAPA;MAQAC;QACAC,OADA;QAEAC,SAFA;QAGAC,OAHA;QAIAC,OAJA;QAKAC,OALA;QAMAC;UACAC,OADA;UAEAC;QAFA;MANA,CARA;MAmBAC,aAnBA;MAoBAC;IApBA;EAsBA,CAzBA;;EA0BAC;IACA;IACAC;MACA;MACA;IACA,CALA;;IAMAC;MACA;MACA;IACA,CATA;;IAUA;MACA,qCACA,kBADA,EAEA,IAFA,EAGA;QACAC,uBADA;QAEAC,sBAFA;QAGAC,eAHA;QAIAC;MAJA,CAHA,EASAC,KATA,CASAC,UATA;;MAUA;QACA;UACAC;UACA;QACA,CAHA,CAGA;UACA;UACAC;QACA;MACA;IAGA,CAhCA;;IAiCAC;MACAD;MACA;IACA,CApCA;;IAqCA;MACA;MACA,oCAFA,CAEA;MACA;;MACA,kCAJA,CAIA;MACA;;MACA;QAEA;QAEA;QACA,4CALA,CAMA;;QACA;MACA,CARA,CAQA;QACA;QACAA;MACA;IACA,CAvDA;;IAwDA;MACA;MAEA,oCAHA,CAGA;MACA;;MACA;QACAE;MACA;;MACA,kCARA,CAQA;;MACA;MACA;MACA;;MACA;QACA;QACA;QACA;QACA;QACA;;QACA;UACA;UACA;UACA;UACA;UACA;QACA,CANA,MAMA;UACA;QACA;MACA,CAfA,CAeA;QACA;QACAF;MACA;;MACA;QACA;QACA,yCAFA,CAGA;;QACA;QACA;QACA;MACA;IACA;;EA/FA,CA1BA;EA4HAG;IACA;MACA;QACA;QACA;QACA,yCAHA,CAIA;;QACA;QACA,qBANA,CAOA;;QACA;QACA,sCATA,CAUA;;QACA;MACA,CAZA,CAYA;QACA;QACAH;MACA;IAGA,CAnBA;EAoBA;AAjJA","names":["name","data","tableData","page","currentPage","pageSize","total","grades","msg","sId","sName","Acj","Bcj","Ccj","grade","cId","cName","status","dialogVisible","methods","handleSizeChange","handleCurrentChange","confirmButtonText","cancelButtonText","type","center","catch","err","removeStudent","console","handleEdit","current","mounted"],"sourceRoot":"src/components","sources":["tableDisplay.vue"],"sourcesContent":["<template>\r\n    <div class=\"center-container\">\r\n\r\n        <el-form :inline=\"true\" :model=\"msg\" class=\"demo-form-inline\">\r\n            <el-form-item label=\"学生ID\">\r\n                <el-input v-model=\"msg.sId\" placeholder=\"学生ID\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"学生名称\">\r\n                <el-input v-model=\"msg.sName\" placeholder=\"学生名称\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"年级\">\r\n                <el-select v-model=\"msg.grade.cName\">\r\n                    <el-option v-for=\"grade in grades\" :key=\"grade.cId\" :value=\"grade.cName\"></el-option>\r\n                </el-select>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-button type=\"primary\" @click=\"onSubmit\">查询</el-button>\r\n            </el-form-item>\r\n            <br />\r\n            <el-form-item label=\"java成绩\" v-show=\"status\">\r\n                <el-input v-model=\"msg.Acj\" placeholder=\"java成绩\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"Android成绩\" v-show=\"status\">\r\n                <el-input v-model=\"msg.Bcj\" placeholder=\"Android成绩\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"javaEE成绩\" v-show=\"status\">\r\n                <el-input v-model=\"msg.Ccj\" placeholder=\"javaEE成绩\"></el-input>\r\n            </el-form-item>\r\n\r\n        </el-form>\r\n        <el-table :data=\"tableData\" border cell-style=\"text-align:center\">\r\n            <el-table-column label=\"Image\" min-width=\"100\" prop=\"logo\" header-align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <img :src=\"scope.row.logo\" alt=\"\" style=\"width: 36px;height: 36px\" />\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"学生ID\" min-width=\"50\" prop=\"sId\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"学生姓名\" min-width=\"100\" prop=\"sName\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"Java成绩\" min-width=\"50\" prop=\"Acj\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"Android成绩\" min-width=\"50\" prop=\"Bcj\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"JavaEE成绩\" min-width=\"50\" prop=\"Ccj\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"总成绩\" min-width=\"50\" prop=\"Zcj\" header-align=\"center\"></el-table-column>\r\n            <el-table-column label=\"操作\" header-align=\"center\">\r\n                <template slot-scope=\"scope\">\r\n                    <el-button type=\"danger\" icon=\"el-icon-delete\" plain @click=\"handleEdit(scope.$index, scope.row)\">编辑\r\n                    </el-button>\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" plain @click=\"handleDelete(scope.$index, scope.row)\">\r\n                        删除</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <div class=\"block\">\r\n            <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                :current-page=\"page.currentPage\" :page-sizes=\"[5, 10, 15, 20]\" :page-size=\"page.pageSize\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\" :total=\"page.total\">\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { searchAllClass } from \"../api\"\r\nimport { searchStudentByAny } from \"../api\"\r\nimport { searchAllStudent } from \"../api\"\r\nimport { removeStudent } from \"../api\"\r\nexport default {\r\n    name: \"tableDisplay\",\r\n    data() {\r\n        return {\r\n            tableData: [],\r\n            page: {\r\n                currentPage: 1,\r\n                pageSize: 10,\r\n                total: \"\"\r\n            },\r\n            grades: [],\r\n            msg: {\r\n                sId: \"\",\r\n                sName: \"\",\r\n                Acj: \"\",\r\n                Bcj: \"\",\r\n                Ccj: \"\",\r\n                grade: {\r\n                    cId: \"\",\r\n                    cName: \"\"\r\n                }\r\n            },\r\n            status: false,\r\n            dialogVisible:false\r\n        }\r\n    },\r\n    methods: {\r\n        // 初始页currentPage、初始每页数据数pagesize和数据data\r\n        handleSizeChange(size) {\r\n            this.page.pageSize = size;\r\n            this.display();\r\n        },\r\n        handleCurrentChange(currentPage) {\r\n            this.page.currentPage = currentPage;\r\n            this.display();\r\n        },\r\n        async handleDelete(index, row) {\r\n            const confirmR = await this.$confirm(\r\n                \"此操作将删除该数据, 是否继续?\",\r\n                \"提示\",\r\n                {\r\n                    confirmButtonText: \"确定\",\r\n                    cancelButtonText: \"取消\",\r\n                    type: \"warning\",\r\n                    center: true,\r\n                }\r\n            ).catch((err) => err);\r\n            if (confirmR == \"confirm\") {\r\n                try {\r\n                    removeStudent(row.sId)\r\n                    this.tableData.splice(index, 1)\r\n                } catch (error) {\r\n                    // 请求失败的回调\r\n                    console.log(index + 1 + \"is error\");\r\n                }\r\n            }\r\n\r\n\r\n        },\r\n        handleEdit(index, row) {\r\n            console.log()\r\n            this.dialogVisible= false;\r\n        },\r\n        async display() {\r\n            //当前页\r\n            var current = this.page.currentPage//请求所需的参数 根据后端接口要求来\r\n            //每页显示条数\r\n            var pageSize = this.page.pageSize//请求所需的参数 根据后端接口要求来\r\n            // 接口\r\n            try {\r\n\r\n                // 调用接口\r\n\r\n                let result = await searchAllStudent(current, pageSize)\r\n                let pageInfo = result.data.dataMap.pageInfo\r\n                // 输出请求后的返回值\r\n                this.tableData = pageInfo.list;\r\n            } catch (error) {\r\n                // 请求失败的回调\r\n                console.log(error)\r\n            }\r\n        },\r\n        async onSubmit() {\r\n            //当前页\r\n\r\n            var current = this.page.currentPage;//请求所需的参数 根据后端接口要求来\r\n            //每页显示条数\r\n            if (current == undefined) {\r\n                current = 1;\r\n            }\r\n            var pageSize = this.page.pageSize;//请求所需的参数 根据后端接口要求来\r\n            var sId = this.msg.sId;\r\n            var sName = this.msg.sName;\r\n            var grade = this.msg.grade;\r\n            try {\r\n                // 调用接口\r\n                let result = await searchStudentByAny(current, pageSize, sId, sName, grade.cName);\r\n                let pageInfo = result.data.dataMap.pageInfo;\r\n                this.tableData = pageInfo.list;\r\n                this.page = pageInfo;\r\n                if (pageInfo.list.length == 1) {\r\n                    let st = pageInfo.list[0]\r\n                    this.msg.Acj = st.Acj;\r\n                    this.msg.Bcj = st.Bcj;\r\n                    this.msg.Ccj = st.Ccj;\r\n                    this.status = true;\r\n                } else if (pageInfo.list.length == 0 || pageInfo.list.length > 1) {\r\n                    this.status = false;\r\n                }\r\n            } catch (error) {\r\n                // 请求失败的回调\r\n                console.log(error)\r\n            }\r\n            if (this.msg.sId == \"\" || this.msg.sName == \"\" || this.msg.grade.cName == \"\") {\r\n                let msg = await searchAllStudent(current, pageSize);\r\n                let pageInfo = msg.data.dataMap.pageInfo;\r\n                // 输出请求后的返回值\r\n                this.tableData = pageInfo.list;\r\n                this.page = pageInfo;\r\n                this.status = false;\r\n            }\r\n        }\r\n\r\n    },\r\n    mounted: function () {\r\n        this.$nextTick(async function () {\r\n            try {\r\n                // 调用接口\r\n                let msg = await searchAllStudent(1, 10)\r\n                let pageInfo = msg.data.dataMap.pageInfo\r\n                // 输出请求后的返回值\r\n                this.tableData = pageInfo.list;\r\n                this.page = pageInfo\r\n                // 调用接口\r\n                let result = await searchAllClass();\r\n                let data = result.data.dataMap.grades\r\n                // 输出请求后的返回值\r\n                this.grades = data\r\n            } catch (error) {\r\n                // 请求失败的回调\r\n                console.log(error)\r\n            }\r\n\r\n\r\n        })\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style  scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}